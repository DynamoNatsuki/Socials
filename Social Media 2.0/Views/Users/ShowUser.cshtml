@using Microsoft.AspNetCore.Identity
@using Social_Media_2._0.ViewModels
@model UsersShowUserViewModel
@inject UserManager<ApplicationUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
    ViewData["Title"] = Model.User.Name;
}

<div>
    <h1>@Model.User.Name</h1>

    @if (!string.IsNullOrEmpty(Model.User.ProfileImagePath))
    {
        <img class="user-image" src="@Model.User.ProfileImagePath" alt="@Model.User.Name"/>       
    }
</div>

<div>
    <h2>Broadcasts from @Model.User.Name</h2>

    @if (user.Id != Model.User.Id)
    {
        if (user.ListeningTo.Any(u => u.Id == Model.User.Id))
        {
            <form action="/Users/Unlisten" method="post">
                <input type="hidden" name="UserId" value="@Model.User.Id" />
                <input class="listen-button" type="submit" value="Unlisten to" />
            </form>
        }

        else
        {
            <form action="/Users/Listen" method="post">
                <input type="hidden" name="UserId" value="@Model.User.Id" />
                <input class="listen-button" type="submit" value="Listen to" />
            </form>
        }
    }

    @foreach (var broadcast in Model.Broadcasts)
    {
        <p>
            <b>@broadcast.Published.ToShortDateString() @broadcast.Published.ToShortTimeString()</b>
            @broadcast.Message <br/>
            <img class="broadcast-image" src="@broadcast.ImageUrl" />
        </p>
    }
</div>